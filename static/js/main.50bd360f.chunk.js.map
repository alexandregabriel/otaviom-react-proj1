{"version":3,"sources":["components/PostCard/index.jsx","components/Posts/index.jsx","utils/loadPosts.js","components/Button/index.jsx","components/TextInput/index.jsx","templates/Home/index.jsx","index.js"],"names":["PostCard","title","body","cover","id","className","src","alt","Posts","posts","map","post","loadPosts","a","postResponse","fetch","photosResponse","Promise","all","photos","json","postsJson","photosJson","postsAndPhotos","index","url","Button","this","props","disabled","text","onClick","Component","TextInput","searchValue","handleChange","onChange","value","type","placeholder","Home","state","allPosts","page","postsPerPage","setState","slice","loadMorePosts","nextPage","nextPosts","push","event","target","noMorePosts","length","filteredPosts","filter","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50bd360f.chunk.js","sourcesContent":["import './styles.css'\r\n\r\nexport const PostCard = ({title, body, cover, id}) => (\r\n  <div className=\"post\">\r\n              <img src={cover} alt={title} />\r\n              <div className=\"post-content\">\r\n                <h2>{title} {id}</h2>\r\n                <p>{body}</p>\r\n              </div>\r\n            </div>\r\n)","import './styles.css';\r\nimport { PostCard } from \"../PostCard\"\r\n\r\nexport const Posts = ({posts}) => (\r\n  <div className=\"posts\">\r\n  {posts.map(post => (\r\n    <PostCard key={post.id} id={post.id} title={post.title} body={post.body} cover={post.cover} />\r\n  ))}\r\n</div>\r\n)","export const loadPosts = async () => {\r\n  const postResponse = fetch('https://jsonplaceholder.typicode.com/posts')\r\n    const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos')\r\n    const [posts, photos] = await Promise.all([postResponse, photosResponse])\r\n\r\n    const postsJson = await posts.json()\r\n    const photosJson = await photos.json()\r\n\r\n\r\n    const postsAndPhotos = postsJson.map((post, index) => {\r\n      return {...post, cover: photosJson[index].url}\r\n    })\r\n\r\n    return postsAndPhotos;\r\n}\r\n","import './styles.css'\r\nimport { Component } from 'react'\r\nexport class Button extends Component {\r\n  render() {\r\n    const { disabled,text, onClick} = this.props\r\n    return (\r\n      <button disabled={disabled} onClick={onClick} className=\"btn\">{text}</button>\r\n    )\r\n  }\r\n}","import './styles.css'\r\n\r\nexport const TextInput = ({ searchValue, handleChange }) => (\r\n  <input className = \"text-input\" onChange = {handleChange} value={searchValue} type=\"search\" placeholder = \"Type your search\"/>\r\n)","import { Component } from 'react'\nimport './styles.css'\nimport { Posts } from '../../components/Posts'\nimport { loadPosts } from '../../utils/loadPosts'\nimport { Button } from '../../components/Button'\nimport { TextInput } from '../../components/TextInput'\n\nexport class Home extends Component {\n  state = {\n    posts: [],\n    allPosts: [],\n    page: 0,\n    postsPerPage: 10,\n    searchValue: '',\n  }\n\n  async componentDidMount() {\n    await this.loadPosts()\n  }\n\n  loadPosts = async () => {\n    const {page, postsPerPage} = this.state\n    const postsAndPhotos = await loadPosts();\n\n    \n\n    this.setState({ posts: postsAndPhotos.slice(page, postsPerPage), allPosts: postsAndPhotos })\n  }\n\n  loadMorePosts = () => {\n    const {page, postsPerPage, allPosts, posts} = this.state\n    const nextPage = page + postsPerPage\n    const nextPosts = allPosts.slice(nextPage, nextPage + postsPerPage)\n    posts.push(...nextPosts)\n    this.setState({posts, page: nextPage})\n  }\n\n  handleChange = (event) => {\n    const {value} = event.target;\n    this.setState({searchValue: value})\n  }\n\n  render() {\n    const { posts, page, postsPerPage, allPosts, searchValue } = this.state\n    const noMorePosts = page + postsPerPage >= allPosts.length;\n\n    const filteredPosts = !!searchValue ? allPosts.filter(post => post.title.toLowerCase().includes(searchValue.toLowerCase())) : posts\n\n    return (\n      <section className=\"container\">\n        <div className=\"search-container\">\n        {!!searchValue && (\n          \n          <h1>Search value: {searchValue}</h1>\n          \n        )}\n\n          <TextInput searchValue={searchValue} handleChange={this.handleChange} />\n        </div>\n        \n\n          {filteredPosts.length > 0 && (\n            <Posts posts={filteredPosts} />\n          )}\n          {filteredPosts.length === 0 && (\n            <p>Não existem posts =(</p>\n          )}\n          \n\n\n        <div className=\"button-container\">\n          {!searchValue && (\n          <Button text=\"More posts\" onClick={this.loadMorePosts} disabled={noMorePosts}/>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n         Olá Mundo!\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n} */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global-styles.css';\n\nimport {Home} from './templates/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}